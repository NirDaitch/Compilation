%{

/* Declarations section */
#include <stdio.h>
#include <string.h>
void showToken(char *);

%}

%option yylineno
%option noyywrap


digit   		([0-9])
letter  		([a-zA-Z])
whitespace		([\t\n ])
endofline       (\x0D|\x0D\x0A|\x0A)
plusorminus 	([+-])
integer 		({plusorminus}?{digit}+)
hexaNum			(0x[0-9a-fA-F]+)
octalNum		(0o[0-7]+)

%%


(---)		showToken("STARTSTRUCT");
(\.\.\.)		showToken("ENDSTRUCT");

(\[)			showToken("LLIST");
(\])			showToken("RLIST");

(\{)			showToken("LDICT");
(\})			showToken("RDICT");

(:)			showToken("KEY");
(\?)			showToken("COMPLEXKEY");

(-)			showToken("ITEM");

(,)			showToken("COMMA");

(!!{letter}+)			showToken("TYPE");


(#[^{endofline}]*{endofline})	showToken("COMMENT");

(true)			showToken("TRUE");

(false)			showToken("FALSE");

({integer}|{hexaNum}|{octalNum})		showToken("INTEGER");





{whitespace}                     ;
.		printf("Lex doesn't know what that is!\n");

%%

void showToken(char * name)
{
	if(strcmp(name,"INTEGER")==0) {
		if(yytext[0]=='+') {
			yytext=yytext++;			
		}
	}
    /* printf("Lex found a %s, the lexeme is %s and its length is %d\n", name, yytext, yyleng); */
	printf("%d %s %s\n", yylineno, name, yytext);
}
