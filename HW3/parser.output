State 60 conflicts: 4 shift/reduce
State 83 conflicts: 4 shift/reduce
State 84 conflicts: 4 shift/reduce
State 85 conflicts: 4 shift/reduce
State 86 conflicts: 4 shift/reduce
State 96 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Funcs

    2 Funcs: __epsilon__
    3      | FuncDecl Funcs

    4 FuncDecl: RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE

    5 RetType: Type
    6        | VOID

    7 Formals: __epsilon__
    8        | FormalsList

    9 FormalsList: FormalDecl
   10            | FormalDecl COMMA FormalsList

   11 FormalDecl: Type ID
   12           | Type ID LBRACK NUM RBRACK
   13           | Type ID LBRACK NUM B RBRACK

   14 Statements: Statement
   15           | Statements Statement

   16 Statement: LBRACE Statements RBRACE
   17          | Type ID SC
   18          | Type ID ASSIGN Exp SC
   19          | Type ID LBRACK NUM RBRACK SC
   20          | Type ID LBRACK NUM B RBRACK SC
   21          | ID ASSIGN Exp SC
   22          | ID LBRACK Exp RBRACK ASSIGN Exp SC
   23          | Call SC
   24          | RETURN SC
   25          | RETURN Exp SC
   26          | IF LPAREN Exp RPAREN Statement
   27          | IF LPAREN Exp RPAREN Statement ELSE Statement
   28          | WHILE LPAREN Exp RPAREN Statement
   29          | BREAK SC

   30 Call: ID LPAREN ExpList RPAREN
   31     | ID LPAREN RPAREN

   32 ExpList: Exp
   33        | Exp COMMA ExpList

   34 Type: INT
   35     | BYTE
   36     | BOOL

   37 Exp: LPAREN Exp RPAREN
   38    | ID LBRACK Exp RBRACK
   39    | Exp BINOP Exp
   40    | ID
   41    | Call
   42    | NUM
   43    | NUM B
   44    | STRING
   45    | TRUE
   46    | FALSE
   47    | NOT Exp
   48    | Exp AND Exp
   49    | Exp OR Exp
   50    | Exp RELOP Exp


Terminals, with rules where they appear

$end (0) 0
error (256)
VOID (258) 6
INT (259) 34
BYTE (260) 35
B (261) 13 20 43
BOOL (262) 36
AND (263) 48
OR (264) 49
NOT (265) 47
TRUE (266) 45
FALSE (267) 46
RETURN (268) 24 25
IF (269) 26 27
ELSE (270) 27
WHILE (271) 28
BREAK (272) 29
SC (273) 17 18 19 20 21 22 23 24 25 29
COMMA (274) 10 33
LPAREN (275) 4 26 27 28 30 31 37
RPAREN (276) 4 26 27 28 30 31 37
LBRACE (277) 4 16
RBRACE (278) 4 16
LBRACK (279) 12 13 19 20 22 38
RBRACK (280) 12 13 19 20 22 38
ASSIGN (281) 18 21 22
RELOP (282) 50
BINOP (283) 39
ID (284) 4 11 12 13 17 18 19 20 21 22 30 31 38 40
NUM (285) 12 13 19 20 42 43
STRING (286) 44
__epsilon__ (287) 2 7


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
Program (34)
    on left: 1, on right: 0
Funcs (35)
    on left: 2 3, on right: 1 3
FuncDecl (36)
    on left: 4, on right: 3
RetType (37)
    on left: 5 6, on right: 4
Formals (38)
    on left: 7 8, on right: 4
FormalsList (39)
    on left: 9 10, on right: 8 10
FormalDecl (40)
    on left: 11 12 13, on right: 9 10
Statements (41)
    on left: 14 15, on right: 4 15 16
Statement (42)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29, on right: 14
    15 26 27 28
Call (43)
    on left: 30 31, on right: 23 41
ExpList (44)
    on left: 32 33, on right: 30 33
Type (45)
    on left: 34 35 36, on right: 5 11 12 13 17 18 19 20
Exp (46)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50, on right: 18
    21 22 25 26 27 28 32 33 37 38 39 47 48 49 50


State 0

    0 $accept: . Program $end

    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    BYTE         shift, and go to state 3
    BOOL         shift, and go to state 4
    __epsilon__  shift, and go to state 5

    Program   go to state 6
    Funcs     go to state 7
    FuncDecl  go to state 8
    RetType   go to state 9
    Type      go to state 10


State 1

    6 RetType: VOID .

    $default  reduce using rule 6 (RetType)


State 2

   34 Type: INT .

    $default  reduce using rule 34 (Type)


State 3

   35 Type: BYTE .

    $default  reduce using rule 35 (Type)


State 4

   36 Type: BOOL .

    $default  reduce using rule 36 (Type)


State 5

    2 Funcs: __epsilon__ .

    $default  reduce using rule 2 (Funcs)


State 6

    0 $accept: Program . $end

    $end  shift, and go to state 11


State 7

    1 Program: Funcs .

    $default  reduce using rule 1 (Program)


State 8

    3 Funcs: FuncDecl . Funcs

    VOID         shift, and go to state 1
    INT          shift, and go to state 2
    BYTE         shift, and go to state 3
    BOOL         shift, and go to state 4
    __epsilon__  shift, and go to state 5

    Funcs     go to state 12
    FuncDecl  go to state 8
    RetType   go to state 9
    Type      go to state 10


State 9

    4 FuncDecl: RetType . ID LPAREN Formals RPAREN LBRACE Statements RBRACE

    ID  shift, and go to state 13


State 10

    5 RetType: Type .

    $default  reduce using rule 5 (RetType)


State 11

    0 $accept: Program $end .

    $default  accept


State 12

    3 Funcs: FuncDecl Funcs .

    $default  reduce using rule 3 (Funcs)


State 13

    4 FuncDecl: RetType ID . LPAREN Formals RPAREN LBRACE Statements RBRACE

    LPAREN  shift, and go to state 14


State 14

    4 FuncDecl: RetType ID LPAREN . Formals RPAREN LBRACE Statements RBRACE

    INT          shift, and go to state 2
    BYTE         shift, and go to state 3
    BOOL         shift, and go to state 4
    __epsilon__  shift, and go to state 15

    Formals      go to state 16
    FormalsList  go to state 17
    FormalDecl   go to state 18
    Type         go to state 19


State 15

    7 Formals: __epsilon__ .

    $default  reduce using rule 7 (Formals)


State 16

    4 FuncDecl: RetType ID LPAREN Formals . RPAREN LBRACE Statements RBRACE

    RPAREN  shift, and go to state 20


State 17

    8 Formals: FormalsList .

    $default  reduce using rule 8 (Formals)


State 18

    9 FormalsList: FormalDecl .
   10            | FormalDecl . COMMA FormalsList

    COMMA  shift, and go to state 21

    $default  reduce using rule 9 (FormalsList)


State 19

   11 FormalDecl: Type . ID
   12           | Type . ID LBRACK NUM RBRACK
   13           | Type . ID LBRACK NUM B RBRACK

    ID  shift, and go to state 22


State 20

    4 FuncDecl: RetType ID LPAREN Formals RPAREN . LBRACE Statements RBRACE

    LBRACE  shift, and go to state 23


State 21

   10 FormalsList: FormalDecl COMMA . FormalsList

    INT   shift, and go to state 2
    BYTE  shift, and go to state 3
    BOOL  shift, and go to state 4

    FormalsList  go to state 24
    FormalDecl   go to state 18
    Type         go to state 19


State 22

   11 FormalDecl: Type ID .
   12           | Type ID . LBRACK NUM RBRACK
   13           | Type ID . LBRACK NUM B RBRACK

    LBRACK  shift, and go to state 25

    $default  reduce using rule 11 (FormalDecl)


State 23

    4 FuncDecl: RetType ID LPAREN Formals RPAREN LBRACE . Statements RBRACE

    INT     shift, and go to state 2
    BYTE    shift, and go to state 3
    BOOL    shift, and go to state 4
    RETURN  shift, and go to state 26
    IF      shift, and go to state 27
    WHILE   shift, and go to state 28
    BREAK   shift, and go to state 29
    LBRACE  shift, and go to state 30
    ID      shift, and go to state 31

    Statements  go to state 32
    Statement   go to state 33
    Call        go to state 34
    Type        go to state 35


State 24

   10 FormalsList: FormalDecl COMMA FormalsList .

    $default  reduce using rule 10 (FormalsList)


State 25

   12 FormalDecl: Type ID LBRACK . NUM RBRACK
   13           | Type ID LBRACK . NUM B RBRACK

    NUM  shift, and go to state 36


State 26

   24 Statement: RETURN . SC
   25          | RETURN . Exp SC

    NOT     shift, and go to state 37
    TRUE    shift, and go to state 38
    FALSE   shift, and go to state 39
    SC      shift, and go to state 40
    LPAREN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43
    STRING  shift, and go to state 44

    Call  go to state 45
    Exp   go to state 46


State 27

   26 Statement: IF . LPAREN Exp RPAREN Statement
   27          | IF . LPAREN Exp RPAREN Statement ELSE Statement

    LPAREN  shift, and go to state 47


State 28

   28 Statement: WHILE . LPAREN Exp RPAREN Statement

    LPAREN  shift, and go to state 48


State 29

   29 Statement: BREAK . SC

    SC  shift, and go to state 49


State 30

   16 Statement: LBRACE . Statements RBRACE

    INT     shift, and go to state 2
    BYTE    shift, and go to state 3
    BOOL    shift, and go to state 4
    RETURN  shift, and go to state 26
    IF      shift, and go to state 27
    WHILE   shift, and go to state 28
    BREAK   shift, and go to state 29
    LBRACE  shift, and go to state 30
    ID      shift, and go to state 31

    Statements  go to state 50
    Statement   go to state 33
    Call        go to state 34
    Type        go to state 35


State 31

   21 Statement: ID . ASSIGN Exp SC
   22          | ID . LBRACK Exp RBRACK ASSIGN Exp SC
   30 Call: ID . LPAREN ExpList RPAREN
   31     | ID . LPAREN RPAREN

    LPAREN  shift, and go to state 51
    LBRACK  shift, and go to state 52
    ASSIGN  shift, and go to state 53


State 32

    4 FuncDecl: RetType ID LPAREN Formals RPAREN LBRACE Statements . RBRACE
   15 Statements: Statements . Statement

    INT     shift, and go to state 2
    BYTE    shift, and go to state 3
    BOOL    shift, and go to state 4
    RETURN  shift, and go to state 26
    IF      shift, and go to state 27
    WHILE   shift, and go to state 28
    BREAK   shift, and go to state 29
    LBRACE  shift, and go to state 30
    RBRACE  shift, and go to state 54
    ID      shift, and go to state 31

    Statement  go to state 55
    Call       go to state 34
    Type       go to state 35


State 33

   14 Statements: Statement .

    $default  reduce using rule 14 (Statements)


State 34

   23 Statement: Call . SC

    SC  shift, and go to state 56


State 35

   17 Statement: Type . ID SC
   18          | Type . ID ASSIGN Exp SC
   19          | Type . ID LBRACK NUM RBRACK SC
   20          | Type . ID LBRACK NUM B RBRACK SC

    ID  shift, and go to state 57


State 36

   12 FormalDecl: Type ID LBRACK NUM . RBRACK
   13           | Type ID LBRACK NUM . B RBRACK

    B       shift, and go to state 58
    RBRACK  shift, and go to state 59


State 37

   47 Exp: NOT . Exp

    NOT     shift, and go to state 37
    TRUE    shift, and go to state 38
    FALSE   shift, and go to state 39
    LPAREN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43
    STRING  shift, and go to state 44

    Call  go to state 45
    Exp   go to state 60


State 38

   45 Exp: TRUE .

    $default  reduce using rule 45 (Exp)


State 39

   46 Exp: FALSE .

    $default  reduce using rule 46 (Exp)


State 40

   24 Statement: RETURN SC .

    $default  reduce using rule 24 (Statement)


State 41

   37 Exp: LPAREN . Exp RPAREN

    NOT     shift, and go to state 37
    TRUE    shift, and go to state 38
    FALSE   shift, and go to state 39
    LPAREN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43
    STRING  shift, and go to state 44

    Call  go to state 45
    Exp   go to state 61


State 42

   30 Call: ID . LPAREN ExpList RPAREN
   31     | ID . LPAREN RPAREN
   38 Exp: ID . LBRACK Exp RBRACK
   40    | ID .

    LPAREN  shift, and go to state 51
    LBRACK  shift, and go to state 62

    $default  reduce using rule 40 (Exp)


State 43

   42 Exp: NUM .
   43    | NUM . B

    B  shift, and go to state 63

    $default  reduce using rule 42 (Exp)


State 44

   44 Exp: STRING .

    $default  reduce using rule 44 (Exp)


State 45

   41 Exp: Call .

    $default  reduce using rule 41 (Exp)


State 46

   25 Statement: RETURN Exp . SC
   39 Exp: Exp . BINOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    SC     shift, and go to state 66
    RELOP  shift, and go to state 67
    BINOP  shift, and go to state 68


State 47

   26 Statement: IF LPAREN . Exp RPAREN Statement
   27          | IF LPAREN . Exp RPAREN Statement ELSE Statement

    NOT     shift, and go to state 37
    TRUE    shift, and go to state 38
    FALSE   shift, and go to state 39
    LPAREN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43
    STRING  shift, and go to state 44

    Call  go to state 45
    Exp   go to state 69


State 48

   28 Statement: WHILE LPAREN . Exp RPAREN Statement

    NOT     shift, and go to state 37
    TRUE    shift, and go to state 38
    FALSE   shift, and go to state 39
    LPAREN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43
    STRING  shift, and go to state 44

    Call  go to state 45
    Exp   go to state 70


State 49

   29 Statement: BREAK SC .

    $default  reduce using rule 29 (Statement)


State 50

   15 Statements: Statements . Statement
   16 Statement: LBRACE Statements . RBRACE

    INT     shift, and go to state 2
    BYTE    shift, and go to state 3
    BOOL    shift, and go to state 4
    RETURN  shift, and go to state 26
    IF      shift, and go to state 27
    WHILE   shift, and go to state 28
    BREAK   shift, and go to state 29
    LBRACE  shift, and go to state 30
    RBRACE  shift, and go to state 71
    ID      shift, and go to state 31

    Statement  go to state 55
    Call       go to state 34
    Type       go to state 35


State 51

   30 Call: ID LPAREN . ExpList RPAREN
   31     | ID LPAREN . RPAREN

    NOT     shift, and go to state 37
    TRUE    shift, and go to state 38
    FALSE   shift, and go to state 39
    LPAREN  shift, and go to state 41
    RPAREN  shift, and go to state 72
    ID      shift, and go to state 42
    NUM     shift, and go to state 43
    STRING  shift, and go to state 44

    Call     go to state 45
    ExpList  go to state 73
    Exp      go to state 74


State 52

   22 Statement: ID LBRACK . Exp RBRACK ASSIGN Exp SC

    NOT     shift, and go to state 37
    TRUE    shift, and go to state 38
    FALSE   shift, and go to state 39
    LPAREN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43
    STRING  shift, and go to state 44

    Call  go to state 45
    Exp   go to state 75


State 53

   21 Statement: ID ASSIGN . Exp SC

    NOT     shift, and go to state 37
    TRUE    shift, and go to state 38
    FALSE   shift, and go to state 39
    LPAREN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43
    STRING  shift, and go to state 44

    Call  go to state 45
    Exp   go to state 76


State 54

    4 FuncDecl: RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE .

    $default  reduce using rule 4 (FuncDecl)


State 55

   15 Statements: Statements Statement .

    $default  reduce using rule 15 (Statements)


State 56

   23 Statement: Call SC .

    $default  reduce using rule 23 (Statement)


State 57

   17 Statement: Type ID . SC
   18          | Type ID . ASSIGN Exp SC
   19          | Type ID . LBRACK NUM RBRACK SC
   20          | Type ID . LBRACK NUM B RBRACK SC

    SC      shift, and go to state 77
    LBRACK  shift, and go to state 78
    ASSIGN  shift, and go to state 79


State 58

   13 FormalDecl: Type ID LBRACK NUM B . RBRACK

    RBRACK  shift, and go to state 80


State 59

   12 FormalDecl: Type ID LBRACK NUM RBRACK .

    $default  reduce using rule 12 (FormalDecl)


State 60

   39 Exp: Exp . BINOP Exp
   47    | NOT Exp .
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    RELOP  shift, and go to state 67
    BINOP  shift, and go to state 68

    AND       [reduce using rule 47 (Exp)]
    OR        [reduce using rule 47 (Exp)]
    RELOP     [reduce using rule 47 (Exp)]
    BINOP     [reduce using rule 47 (Exp)]
    $default  reduce using rule 47 (Exp)


State 61

   37 Exp: LPAREN Exp . RPAREN
   39    | Exp . BINOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp

    AND     shift, and go to state 64
    OR      shift, and go to state 65
    RPAREN  shift, and go to state 81
    RELOP   shift, and go to state 67
    BINOP   shift, and go to state 68


State 62

   38 Exp: ID LBRACK . Exp RBRACK

    NOT     shift, and go to state 37
    TRUE    shift, and go to state 38
    FALSE   shift, and go to state 39
    LPAREN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43
    STRING  shift, and go to state 44

    Call  go to state 45
    Exp   go to state 82


State 63

   43 Exp: NUM B .

    $default  reduce using rule 43 (Exp)


State 64

   48 Exp: Exp AND . Exp

    NOT     shift, and go to state 37
    TRUE    shift, and go to state 38
    FALSE   shift, and go to state 39
    LPAREN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43
    STRING  shift, and go to state 44

    Call  go to state 45
    Exp   go to state 83


State 65

   49 Exp: Exp OR . Exp

    NOT     shift, and go to state 37
    TRUE    shift, and go to state 38
    FALSE   shift, and go to state 39
    LPAREN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43
    STRING  shift, and go to state 44

    Call  go to state 45
    Exp   go to state 84


State 66

   25 Statement: RETURN Exp SC .

    $default  reduce using rule 25 (Statement)


State 67

   50 Exp: Exp RELOP . Exp

    NOT     shift, and go to state 37
    TRUE    shift, and go to state 38
    FALSE   shift, and go to state 39
    LPAREN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43
    STRING  shift, and go to state 44

    Call  go to state 45
    Exp   go to state 85


State 68

   39 Exp: Exp BINOP . Exp

    NOT     shift, and go to state 37
    TRUE    shift, and go to state 38
    FALSE   shift, and go to state 39
    LPAREN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43
    STRING  shift, and go to state 44

    Call  go to state 45
    Exp   go to state 86


State 69

   26 Statement: IF LPAREN Exp . RPAREN Statement
   27          | IF LPAREN Exp . RPAREN Statement ELSE Statement
   39 Exp: Exp . BINOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp

    AND     shift, and go to state 64
    OR      shift, and go to state 65
    RPAREN  shift, and go to state 87
    RELOP   shift, and go to state 67
    BINOP   shift, and go to state 68


State 70

   28 Statement: WHILE LPAREN Exp . RPAREN Statement
   39 Exp: Exp . BINOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp

    AND     shift, and go to state 64
    OR      shift, and go to state 65
    RPAREN  shift, and go to state 88
    RELOP   shift, and go to state 67
    BINOP   shift, and go to state 68


State 71

   16 Statement: LBRACE Statements RBRACE .

    $default  reduce using rule 16 (Statement)


State 72

   31 Call: ID LPAREN RPAREN .

    $default  reduce using rule 31 (Call)


State 73

   30 Call: ID LPAREN ExpList . RPAREN

    RPAREN  shift, and go to state 89


State 74

   32 ExpList: Exp .
   33        | Exp . COMMA ExpList
   39 Exp: Exp . BINOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    COMMA  shift, and go to state 90
    RELOP  shift, and go to state 67
    BINOP  shift, and go to state 68

    $default  reduce using rule 32 (ExpList)


State 75

   22 Statement: ID LBRACK Exp . RBRACK ASSIGN Exp SC
   39 Exp: Exp . BINOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp

    AND     shift, and go to state 64
    OR      shift, and go to state 65
    RBRACK  shift, and go to state 91
    RELOP   shift, and go to state 67
    BINOP   shift, and go to state 68


State 76

   21 Statement: ID ASSIGN Exp . SC
   39 Exp: Exp . BINOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    SC     shift, and go to state 92
    RELOP  shift, and go to state 67
    BINOP  shift, and go to state 68


State 77

   17 Statement: Type ID SC .

    $default  reduce using rule 17 (Statement)


State 78

   19 Statement: Type ID LBRACK . NUM RBRACK SC
   20          | Type ID LBRACK . NUM B RBRACK SC

    NUM  shift, and go to state 93


State 79

   18 Statement: Type ID ASSIGN . Exp SC

    NOT     shift, and go to state 37
    TRUE    shift, and go to state 38
    FALSE   shift, and go to state 39
    LPAREN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43
    STRING  shift, and go to state 44

    Call  go to state 45
    Exp   go to state 94


State 80

   13 FormalDecl: Type ID LBRACK NUM B RBRACK .

    $default  reduce using rule 13 (FormalDecl)


State 81

   37 Exp: LPAREN Exp RPAREN .

    $default  reduce using rule 37 (Exp)


State 82

   38 Exp: ID LBRACK Exp . RBRACK
   39    | Exp . BINOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp

    AND     shift, and go to state 64
    OR      shift, and go to state 65
    RBRACK  shift, and go to state 95
    RELOP   shift, and go to state 67
    BINOP   shift, and go to state 68


State 83

   39 Exp: Exp . BINOP Exp
   48    | Exp . AND Exp
   48    | Exp AND Exp .
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    RELOP  shift, and go to state 67
    BINOP  shift, and go to state 68

    AND       [reduce using rule 48 (Exp)]
    OR        [reduce using rule 48 (Exp)]
    RELOP     [reduce using rule 48 (Exp)]
    BINOP     [reduce using rule 48 (Exp)]
    $default  reduce using rule 48 (Exp)


State 84

   39 Exp: Exp . BINOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   49    | Exp OR Exp .
   50    | Exp . RELOP Exp

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    RELOP  shift, and go to state 67
    BINOP  shift, and go to state 68

    AND       [reduce using rule 49 (Exp)]
    OR        [reduce using rule 49 (Exp)]
    RELOP     [reduce using rule 49 (Exp)]
    BINOP     [reduce using rule 49 (Exp)]
    $default  reduce using rule 49 (Exp)


State 85

   39 Exp: Exp . BINOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp
   50    | Exp RELOP Exp .

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    RELOP  shift, and go to state 67
    BINOP  shift, and go to state 68

    AND       [reduce using rule 50 (Exp)]
    OR        [reduce using rule 50 (Exp)]
    RELOP     [reduce using rule 50 (Exp)]
    BINOP     [reduce using rule 50 (Exp)]
    $default  reduce using rule 50 (Exp)


State 86

   39 Exp: Exp . BINOP Exp
   39    | Exp BINOP Exp .
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    RELOP  shift, and go to state 67
    BINOP  shift, and go to state 68

    AND       [reduce using rule 39 (Exp)]
    OR        [reduce using rule 39 (Exp)]
    RELOP     [reduce using rule 39 (Exp)]
    BINOP     [reduce using rule 39 (Exp)]
    $default  reduce using rule 39 (Exp)


State 87

   26 Statement: IF LPAREN Exp RPAREN . Statement
   27          | IF LPAREN Exp RPAREN . Statement ELSE Statement

    INT     shift, and go to state 2
    BYTE    shift, and go to state 3
    BOOL    shift, and go to state 4
    RETURN  shift, and go to state 26
    IF      shift, and go to state 27
    WHILE   shift, and go to state 28
    BREAK   shift, and go to state 29
    LBRACE  shift, and go to state 30
    ID      shift, and go to state 31

    Statement  go to state 96
    Call       go to state 34
    Type       go to state 35


State 88

   28 Statement: WHILE LPAREN Exp RPAREN . Statement

    INT     shift, and go to state 2
    BYTE    shift, and go to state 3
    BOOL    shift, and go to state 4
    RETURN  shift, and go to state 26
    IF      shift, and go to state 27
    WHILE   shift, and go to state 28
    BREAK   shift, and go to state 29
    LBRACE  shift, and go to state 30
    ID      shift, and go to state 31

    Statement  go to state 97
    Call       go to state 34
    Type       go to state 35


State 89

   30 Call: ID LPAREN ExpList RPAREN .

    $default  reduce using rule 30 (Call)


State 90

   33 ExpList: Exp COMMA . ExpList

    NOT     shift, and go to state 37
    TRUE    shift, and go to state 38
    FALSE   shift, and go to state 39
    LPAREN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43
    STRING  shift, and go to state 44

    Call     go to state 45
    ExpList  go to state 98
    Exp      go to state 74


State 91

   22 Statement: ID LBRACK Exp RBRACK . ASSIGN Exp SC

    ASSIGN  shift, and go to state 99


State 92

   21 Statement: ID ASSIGN Exp SC .

    $default  reduce using rule 21 (Statement)


State 93

   19 Statement: Type ID LBRACK NUM . RBRACK SC
   20          | Type ID LBRACK NUM . B RBRACK SC

    B       shift, and go to state 100
    RBRACK  shift, and go to state 101


State 94

   18 Statement: Type ID ASSIGN Exp . SC
   39 Exp: Exp . BINOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    SC     shift, and go to state 102
    RELOP  shift, and go to state 67
    BINOP  shift, and go to state 68


State 95

   38 Exp: ID LBRACK Exp RBRACK .

    $default  reduce using rule 38 (Exp)


State 96

   26 Statement: IF LPAREN Exp RPAREN Statement .
   27          | IF LPAREN Exp RPAREN Statement . ELSE Statement

    ELSE  shift, and go to state 103

    ELSE      [reduce using rule 26 (Statement)]
    $default  reduce using rule 26 (Statement)


State 97

   28 Statement: WHILE LPAREN Exp RPAREN Statement .

    $default  reduce using rule 28 (Statement)


State 98

   33 ExpList: Exp COMMA ExpList .

    $default  reduce using rule 33 (ExpList)


State 99

   22 Statement: ID LBRACK Exp RBRACK ASSIGN . Exp SC

    NOT     shift, and go to state 37
    TRUE    shift, and go to state 38
    FALSE   shift, and go to state 39
    LPAREN  shift, and go to state 41
    ID      shift, and go to state 42
    NUM     shift, and go to state 43
    STRING  shift, and go to state 44

    Call  go to state 45
    Exp   go to state 104


State 100

   20 Statement: Type ID LBRACK NUM B . RBRACK SC

    RBRACK  shift, and go to state 105


State 101

   19 Statement: Type ID LBRACK NUM RBRACK . SC

    SC  shift, and go to state 106


State 102

   18 Statement: Type ID ASSIGN Exp SC .

    $default  reduce using rule 18 (Statement)


State 103

   27 Statement: IF LPAREN Exp RPAREN Statement ELSE . Statement

    INT     shift, and go to state 2
    BYTE    shift, and go to state 3
    BOOL    shift, and go to state 4
    RETURN  shift, and go to state 26
    IF      shift, and go to state 27
    WHILE   shift, and go to state 28
    BREAK   shift, and go to state 29
    LBRACE  shift, and go to state 30
    ID      shift, and go to state 31

    Statement  go to state 107
    Call       go to state 34
    Type       go to state 35


State 104

   22 Statement: ID LBRACK Exp RBRACK ASSIGN Exp . SC
   39 Exp: Exp . BINOP Exp
   48    | Exp . AND Exp
   49    | Exp . OR Exp
   50    | Exp . RELOP Exp

    AND    shift, and go to state 64
    OR     shift, and go to state 65
    SC     shift, and go to state 108
    RELOP  shift, and go to state 67
    BINOP  shift, and go to state 68


State 105

   20 Statement: Type ID LBRACK NUM B RBRACK . SC

    SC  shift, and go to state 109


State 106

   19 Statement: Type ID LBRACK NUM RBRACK SC .

    $default  reduce using rule 19 (Statement)


State 107

   27 Statement: IF LPAREN Exp RPAREN Statement ELSE Statement .

    $default  reduce using rule 27 (Statement)


State 108

   22 Statement: ID LBRACK Exp RBRACK ASSIGN Exp SC .

    $default  reduce using rule 22 (Statement)


State 109

   20 Statement: Type ID LBRACK NUM B RBRACK SC .

    $default  reduce using rule 20 (Statement)
